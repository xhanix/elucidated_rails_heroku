<% unless @subscription.errors.blank? %>
<%= @subscription.errors.full_messages.to_sentence %>
<% end %>

<!-- end header content -->


<div class="col-sm-12 col-md-9 col-centered" style="float: none; margin: 0 auto;">
  <p class="lead" style="font-family: 'Century Gothic',CenturyGothic,AppleGothic,sans-serif;margin-left: -17px;">Start a new Lab Book today!</p>
  <div class="row">
    <div class="col-xs-8 col-sm-6" style="background-color: #f9f7f7;border-style: solid;border-color: #afafaf;border-width: 1px;min-width: 350px;min-height: 450px;">


      <%= form_tag subscriptions_path, :class => 'card-form', :id => 'subscribe-form' do %>

      <input type="hidden" class="field is-empty" name="plan_id" value=<%= @plan.id %> />
      <label>
        <input name="cardholdername" class="field is-empty" placeholder="" />
        <span><span>Name</span></span>
      </label>
      <label>
        <input name="email" class="field is-empty" placeholder="" type="email" />
        <span><span>Email</span></span>
      </label>
      <label id="card-field-container">
        <div id="card-element" class="field is-empty"></div>
        <span><span>Card Number</span></span>
      </label>
      <div style="height: 50px;"></div>
      <div class="col col-centered" id='spinner'></div>
      <button class="btn btn-block btn-success" type="submit" name="submit" id="submit-button" style="font-size: 18px;font-family: 'Century Gothic',CenturyGothic,AppleGothic,sans-serif;">Purchase</button>
      <div class="outcome">

        <div class="error"></div>
      </div></br></br>
      <% end %>

    </div>
    <div class="col-xs-8 col-sm-6 col-md-4" style="background-color:#efefef;border-style: solid;border-color: #afafaf;border-width: 1px;min-width: 350px;min-height: 450px;padding-top: 10px;">
      <p class="lead text-center text-success" style="font-family: 'Century Gothic',CenturyGothic,AppleGothic,sans-serif;">ELUCIDAID PREMIUM</p>
      <div class="col-centered" style="padding-top: 25px;padding-left: 15px;float: none; margin: 0 auto;width: 250px;height: 80px;background-color: white;border-radius: 5px;border-color: #7f7e7e;border-width: 1px;border-style: solid;">
       <p style="font-size: 23px;font-family: 'Century Gothic',CenturyGothic,AppleGothic,sans-serif;
       font-variant: normal;color:#7f7e7e;">$149.99 <span style="font-size: 16px;">/year</span></p>
       <p style="font-size: 12px;font-family: 'Century Gothic',CenturyGothic,AppleGothic,sans-serif;
       font-variant: normal;color:green;font-weight: bold;">Includes 7 Day FREE Trial</p>
     </div>
     <div class="col-centered" style="padding-top: 25px;padding-left: 15px;float: none; margin: 0 auto;width: 250px;">
      <p> Charge will apply after the '7 Day Free' Trial. This subscription will automatically renew.</p>
      <p>Need assistance? Contact us: <br><a href="mailto:help@elucidaid.com" class="text-muted">help@elucidaid.com</a><br> Phone: +1 (302) 250-4868</p><br><br>
      <div id="paypal-button"></div><script src="https://www.paypalobjects.com/api/button.js?"
      data-merchant="braintree"
      data-id="paypal-button"
      data-button="subscribe"
      data-color="tiny"
      data-size="small"
      data-shape="rect"
      data-button_type="button"
      data-button_disabled="false"
      ></script>
      <button class="btn btn-primary btn-xs" style="margin-top: -10px;visibility: hidden;" id="pay-with-card-btn">Paying by Card?</button>
    </div>

  </div>
</div>
</div>

<style type="text/css">
  @keyframes spinner {
  to {transform: rotate(360deg);}
}
 
.spinner:before {
  content: '';
  box-sizing: border-box;
  position: absolute;
  top: 50%;
  left: 50%;
  width: 80px;
  height: 80px;
  margin-top: -10px;
  margin-left: -10px;
  border-radius: 50%;
  border: 2px solid #ccc;
  border-top-color: #333;
  animation: spinner .6s linear infinite;
  margin-top: -150px;
  margin-left: -45px;
}
  .card-form {
    font-family: 'Century Gothic',CenturyGothic,AppleGothic,sans-serif;
    font-size: 19px;
    font-variant: normal;
    padding: 0;
    margin: 0;
  }



  label {
    position: relative;
    color: #8798AB;
    display: block;
    margin-top: 30px;
    margin-bottom: 20px;
    display: flex;
    flex-direction: column-reverse;
    font-family: 'Century Gothic',CenturyGothic,AppleGothic,sans-serif;
  }

  label > span {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    font-weight: 300;
    line-height: 32px;
    color: #8798AB;
    border-bottom: 1px solid #586A82;
    transition: border-bottom-color 200ms ease-in-out;
    cursor: text;
  }

  label > span span {
    position: absolute;
    top: 0;
    left: 0;
    transform-origin: 0% 50%;
    transition: transform 200ms ease-in-out;
    cursor: text;
  }

  label .field.is-focused + span,
  label .field:not(.is-empty) + span {
    pointer-events: none;
  }

  label .field.is-focused + span span,
  label .field:not(.is-empty) + span span {
    transform: scale(0.68) translateY(-36px);
    cursor: default;
  }

  label .field.is-focused + span {
    border-bottom-color: #34D08C;
  }

  .field {
    background: transparent;
    font-weight: 300;
    border: 0;
    color: black;
    outline: none;
    cursor: text;
    display: block;
    width: 100%;
    line-height: 32px;
    padding-bottom: 3px;
    transition: opacity 200ms ease-in-out;
    font-family: 'Century Gothic',CenturyGothic,AppleGothic,sans-serif;
  }

  .field::-webkit-input-placeholder { color: #8898AA; }
  .field::-moz-placeholder { color: #8898AA; }

  .field.is-empty:not(.is-focused) {
    opacity: 0;
  }



  .outcome {
    float: left;
    width: 100%;
    padding-top: 8px;
    min-height: 20px;
    text-align: center;
  }

  .success, .error {
    display: none;
    font-size: 15px;
  }

  .success.visible, .error.visible {
    display: inline;
  }

  .error {
    color: #E4584C;
  }

  .success {
    color: #34D08C;
  }

  .success .token {
    font-weight: 500;
    font-size: 15px;
  }
</style>

<%= javascript_include_tag 'https://js.braintreegateway.com/web/3.11.0/js/client.min.js'%>
<%= javascript_include_tag 'https://js.braintreegateway.com/web/3.11.0/js/paypal.min.js' %>
<%= javascript_include_tag 'https://js.braintreegateway.com/web/3.11.0/js/data-collector.min.js'%>
<script type="text/javascript">

  var ready;
  ready = function() {
    var stripe = Stripe("<%= Rails.configuration.stripe[:publishable_key] %>");
    var elements = stripe.elements();
    var paypalButton = document.querySelector('.paypal-button');
    var errorElement = document.querySelector('.error');
    var spinner =  document.querySelector('#spinner')
    var inputs = Array.from(document.querySelectorAll('input.field'));
    var form = document.querySelector('form');
    var nameField = form.querySelector('input[name=cardholdername]');
    var emailField = form.querySelector('input[name=email]');
    var loader = document.querySelector('.loader');
    var paycardButton = document.querySelector("#pay-with-card-btn");
    var card = elements.create('card', {
      iconStyle: 'solid',
      style: {
        base: {
          iconColor: '#8798AB',
          color: 'black',
          lineHeight: '36px',
          fontWeight: 300,
          fontFamily: 'Helvetica Neue',
          fontSize: '19px',

          '::placeholder': {
            color: '#8798AB',
          },
        },
        invalid: {
          iconColor: '#e85746',
          color: '#e85746',
        }
      },
      classes: {
        focus: 'is-focused',
        empty: 'is-empty',
      },
    });
    card.mount('#card-element');
    inputs.forEach(function(input) {
      input.addEventListener('focus', function() {
        input.classList.add('is-focused');
      });
      input.addEventListener('blur', function() {
        input.classList.remove('is-focused');
      });
      input.addEventListener('keyup', function() {
        if (input.value.length === 0) {
          input.classList.add('is-empty');
        } else {
          input.classList.remove('is-empty');
        }
      });
    });
    function poll(guid, num_retries_left) {
      if (num_retries_left == 0) {
        errorElement.textContent = "This seems to be taking too long. Email help@elucidaid.com with reference: " +  guid + "  We'll take a look.";
        errorElement.classList.add('visible');
        return; 
      }
      $.get("/sub_status/" + guid, function(data) {
        if (data.status === "finished") {
          window.location = "/download_app/" + guid;
        } else if (data.status === "error") {
          errorElement.textContent = data.error;
          errorElement.classList.add('visible');
          form.querySelector('button[name=submit]').removeAttribute('disabled');
          paypalButton.removeAttribute('disabled');
          spinner.classList.remove('spinner');
        }
        else{
          setTimeout(function() { poll(guid, num_retries_left - 1) }, 500);
        }
      }); 
    }
    paycardButton.addEventListener('click', function(e) {
      errorElement.classList.remove('visible');
      $('#submit-button').show();
      $('#card-field-container').show();
      });

    form.addEventListener('submit', function(e) {
      e.preventDefault();
      if (!validateEmail(emailField.value)) {
        errorElement.textContent = 'Enter a valid email address.';
        errorElement.classList.add('visible');
        return false
      }
      else if (nameField.value=="") {
        errorElement.textContent = 'Please enter your name.';
        errorElement.classList.add('visible');
        return false
      } else {
        errorElement.classList.remove('visible');
      }
      form.querySelector('button[name=submit]').disabled = true;
      spinner.classList.add('spinner');
      var extraDetails = {
        name: form.querySelector('input[name=cardholdername]').value,
      };
      var promise = stripe.createToken(card, extraDetails);
      promise.then(function(result){
        errorElement.classList.remove('visible');
        if (result.token) {
          var token = result.token.id;
    // Use the token to create a charge or a customer
    // https://stripe.com/docs/charges
    var input = $("<input>").attr("type", "hidden").attr("name", "stripeToken").val(token);
    $('#subscribe-form').append($(input));
    //form.append($('<input type="hidden" name="stripeToken">').val(token));
    $.ajax({
      type: "POST",
      url: "/subscriptions",
      data: $('#subscribe-form').serialize(),
      success: function(data) {
        poll(data.guid, 30);
      },
      error: function(data) { 
        errorElement.textContent = data.responseJSON.error;
        errorElement.classList.add('visible');
        form.querySelector('button[name=submit]').removeAttribute('disabled');
        spinner.classList.remove('spinner');
      }
    });
  } else if (result.error) {
    errorElement.textContent = result.error.message;
    errorElement.classList.add('visible');
    form.querySelector('button[name=submit]').removeAttribute('disabled');
    spinner.classList.remove('spinner');
  }
});
    });

    braintree.client.create({
      authorization:  "<%= @token = Braintree::ClientToken.generate %>",
    }, function (err, clientInstance) {
      braintree.dataCollector.create({
        client: clientInstance,
        paypal: true
      }, function (err, dataCollectorInstance) {
        if (err) {
      // Handle error
      return;
    }
    // At this point, you should access the dataCollectorInstance.deviceData value and provide it
    // to your server, e.g. by injecting it into your form as a hidden input.
    myDeviceData = dataCollectorInstance.deviceData;
  });

  // Initialize your PayPal component here.
    // Create a PayPal component.
    braintree.paypal.create({client: clientInstance}, function (paypalErr, paypalInstance) {

    // Stop if there was a problem creating PayPal.
    // This could happen if there was a network error or if it's incorrectly
    // configured.
    if (paypalErr) {
      console.error('Error creating PayPal:', paypalErr);
      return;
    }
    // Enable the button.
    paypalButton.removeAttribute('disabled');
    // When the button is clicked, attempt to tokenize.
    paypalButton.addEventListener('click', function (event) {
      // Because tokenization opens a popup, this has to be called as a result of
      // customer action, like clicking a button—you cannot call this at any time.
      $('#submit-button').hide();
      $('#card-field-container').hide();
      if (nameField.value == "" )  {
        nameField.focus();
        errorElement.textContent = 'Please enter your name and email to proceed.';
        errorElement.classList.add('visible');
        return false;
      } 
      else if (!validateEmail(emailField.value)) {
        emailField.focus();
        errorElement.textContent = 'Please enter a valid email address.';
        errorElement.classList.add('visible');
        return false;
      }
      else {
        errorElement.classList.remove('visible');
        paypalInstance.tokenize({
            flow: 'vault', // This enables the Vault flow
            billingAgreementDescription: '7 Day Free Trial, followed by $149.99/year for eLucidaid premium License. This subscription will automatically auto renew. You can request cancellation at any time.',
            locale: 'en_US',
            enableShippingAddress: false,
          }, function (tokenizeErr, payload) {

            // Stop if there was an error.
            if (tokenizeErr) {
              if (tokenizeErr.type !== 'CUSTOMER') {
                console.error('Error tokenizing:', tokenizeErr);
              }
              return;
            }
            // Tokenization succeeded!
            paypalButton.setAttribute('disabled', true);
            spinner.classList.add('spinner');
            $.ajax({
              type: "POST",
              url: "/subscriptions",
              data: 'braintree='+payload.nonce+'&myDeviceData='+myDeviceData+'&email='+emailField.value+'&cardholdername='+nameField.value,
              success: function(data) {
                poll(data.guid, 30);
              },
              error: function(data) {
                errorElement.textContent = data.responseJSON.error;
                errorElement.classList.add('visible');
                paypalButton.removeAttribute('disabled');
                spinner.classList.remove('spinner');
              }
            });
          });}
      }, false);
  });
  });
    function validateEmail(email)  {  
      if (/^\w+([\.-]?\w+)*@\w+([\.-]?\w+)*(\.\w{2,3})+$/.test(email))  
      {  
        return (true)  
      }   
      return (false)  
    }  
  };
  $(document).ready(ready);
  $(document).on('page:load', ready);
</script>



