LOG:  database system was shut down at 2017-03-11 09:23:37 EST
LOG:  MultiXact member wraparound protections are now enabled
LOG:  database system is ready to accept connections
LOG:  autovacuum launcher started
ERROR:  relation "users" does not exist
STATEMENT:  CREATE TABLE "products" ("id" serial primary key, "name" character varying, "permalink" character varying, "description" text, "price" integer, "user_id" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, CONSTRAINT "fk_rails_dee2631783"
	FOREIGN KEY ("user_id")
	  REFERENCES "users" ("id")
	)
ERROR:  column "stripe_id" of relation "sales" already exists
STATEMENT:  ALTER TABLE "sales" ADD "stripe_id" character varying
ERROR:  relation "versions" does not exist at character 563
STATEMENT:                SELECT a.attname, format_type(a.atttypid, a.atttypmod),
	                     pg_get_expr(d.adbin, d.adrelid), a.attnotnull, a.atttypid, a.atttypmod,
	             (SELECT c.collname FROM pg_collation c, pg_type t
	               WHERE c.oid = a.attcollation AND t.oid = a.atttypid AND a.attcollation <> t.typcollation),
	                     col_description(a.attrelid, a.attnum) AS comment
	                FROM pg_attribute a LEFT JOIN pg_attrdef d
	                  ON a.attrelid = d.adrelid AND a.attnum = d.adnum
	               WHERE a.attrelid = '"versions"'::regclass
	                 AND a.attnum > 0 AND NOT a.attisdropped
	               ORDER BY a.attnum
	
ERROR:  relation "versions" does not exist at character 563
STATEMENT:                SELECT a.attname, format_type(a.atttypid, a.atttypmod),
	                     pg_get_expr(d.adbin, d.adrelid), a.attnotnull, a.atttypid, a.atttypmod,
	             (SELECT c.collname FROM pg_collation c, pg_type t
	               WHERE c.oid = a.attcollation AND t.oid = a.atttypid AND a.attcollation <> t.typcollation),
	                     col_description(a.attrelid, a.attnum) AS comment
	                FROM pg_attribute a LEFT JOIN pg_attrdef d
	                  ON a.attrelid = d.adrelid AND a.attnum = d.adnum
	               WHERE a.attrelid = '"versions"'::regclass
	                 AND a.attnum > 0 AND NOT a.attisdropped
	               ORDER BY a.attnum
	
ERROR:  relation "versions" does not exist at character 563
STATEMENT:                SELECT a.attname, format_type(a.atttypid, a.atttypmod),
	                     pg_get_expr(d.adbin, d.adrelid), a.attnotnull, a.atttypid, a.atttypmod,
	             (SELECT c.collname FROM pg_collation c, pg_type t
	               WHERE c.oid = a.attcollation AND t.oid = a.atttypid AND a.attcollation <> t.typcollation),
	                     col_description(a.attrelid, a.attnum) AS comment
	                FROM pg_attribute a LEFT JOIN pg_attrdef d
	                  ON a.attrelid = d.adrelid AND a.attnum = d.adnum
	               WHERE a.attrelid = '"versions"'::regclass
	                 AND a.attnum > 0 AND NOT a.attisdropped
	               ORDER BY a.attnum
	
ERROR:  relation "versions" does not exist at character 563
STATEMENT:                SELECT a.attname, format_type(a.atttypid, a.atttypmod),
	                     pg_get_expr(d.adbin, d.adrelid), a.attnotnull, a.atttypid, a.atttypmod,
	             (SELECT c.collname FROM pg_collation c, pg_type t
	               WHERE c.oid = a.attcollation AND t.oid = a.atttypid AND a.attcollation <> t.typcollation),
	                     col_description(a.attrelid, a.attnum) AS comment
	                FROM pg_attribute a LEFT JOIN pg_attrdef d
	                  ON a.attrelid = d.adrelid AND a.attnum = d.adnum
	               WHERE a.attrelid = '"versions"'::regclass
	                 AND a.attnum > 0 AND NOT a.attisdropped
	               ORDER BY a.attnum
	
ERROR:  relation "versions" does not exist at character 563
STATEMENT:                SELECT a.attname, format_type(a.atttypid, a.atttypmod),
	                     pg_get_expr(d.adbin, d.adrelid), a.attnotnull, a.atttypid, a.atttypmod,
	             (SELECT c.collname FROM pg_collation c, pg_type t
	               WHERE c.oid = a.attcollation AND t.oid = a.atttypid AND a.attcollation <> t.typcollation),
	                     col_description(a.attrelid, a.attnum) AS comment
	                FROM pg_attribute a LEFT JOIN pg_attrdef d
	                  ON a.attrelid = d.adrelid AND a.attnum = d.adnum
	               WHERE a.attrelid = '"versions"'::regclass
	                 AND a.attnum > 0 AND NOT a.attisdropped
	               ORDER BY a.attnum
	
ERROR:  relation "versions" does not exist at character 563
STATEMENT:                SELECT a.attname, format_type(a.atttypid, a.atttypmod),
	                     pg_get_expr(d.adbin, d.adrelid), a.attnotnull, a.atttypid, a.atttypmod,
	             (SELECT c.collname FROM pg_collation c, pg_type t
	               WHERE c.oid = a.attcollation AND t.oid = a.atttypid AND a.attcollation <> t.typcollation),
	                     col_description(a.attrelid, a.attnum) AS comment
	                FROM pg_attribute a LEFT JOIN pg_attrdef d
	                  ON a.attrelid = d.adrelid AND a.attnum = d.adnum
	               WHERE a.attrelid = '"versions"'::regclass
	                 AND a.attnum > 0 AND NOT a.attisdropped
	               ORDER BY a.attnum
	
ERROR:  relation "users" does not exist
STATEMENT:  CREATE TABLE "subscriptions" ("id" serial primary key, "user_id" integer, "plan_id" integer, "stripe_id" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, CONSTRAINT "fk_rails_933bdff476"
	FOREIGN KEY ("user_id")
	  REFERENCES "users" ("id")
	, CONSTRAINT "fk_rails_63d3df128b"
	FOREIGN KEY ("plan_id")
	  REFERENCES "plans" ("id")
	)
ERROR:  relation "users" does not exist
STATEMENT:  CREATE TABLE "subscriptions" ("id" serial primary key, "user_id" integer, "plan_id" integer, "stripe_id" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, CONSTRAINT "fk_rails_933bdff476"
	FOREIGN KEY ("user_id")
	  REFERENCES "users" ("id")
	, CONSTRAINT "fk_rails_63d3df128b"
	FOREIGN KEY ("plan_id")
	  REFERENCES "plans" ("id")
	)
ERROR:  cached plan must not change result type
STATEMENT:  SELECT  "subscriptions".* FROM "subscriptions" WHERE "subscriptions"."guid" = $1 LIMIT $2
ERROR:  cached plan must not change result type
STATEMENT:  SELECT  "subscriptions".* FROM "subscriptions" WHERE "subscriptions"."id" = $1 LIMIT $2
ERROR:  cached plan must not change result type
STATEMENT:  SELECT  "subscriptions".* FROM "subscriptions" WHERE "subscriptions"."guid" = $1 LIMIT $2
ERROR:  cached plan must not change result type
STATEMENT:  SELECT  "subscriptions".* FROM "subscriptions" WHERE "subscriptions"."id" = $1 LIMIT $2
